#!/bin/bash

#------------------------------------------------------------------------------
# Setup a Debian-based VPS for remote pair hacking:
#------------------------------------------------------------------------------

set -ex

USAGE="Usage: ${0##*/} <ip-address> <pair-user-id> [<admin-user-id>]"

die() { echo "$@" >&2; exit 1; }

if [ $# -lt 2 -o $# -gt 3 ] ||
   [[ ! "$1" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    die "$USAGE"
fi

ip_address="$1"
pair_user="$2"
admin_user="${3:-$USER}"
setup_file_name='~/server-setup.bash'

#------------------------------------------------------------------------------
# Do the 'root' stuff first:
#------------------------------------------------------------------------------

# Set up ssh key for root. Needs root password:
cat ~/.ssh/id_rsa.pub | ssh root@$ip_address \
  "cat > k; mkdir -p .ssh; chmod 700 .ssh; mv k .ssh/authorized_keys"

# Copy over pair's key if present
pair_key=${0%/bin/*}/user/$pair_user/id_rsa.pub
if [ -e $pair_key ]; then
  scp $pair_key root@$ip_address:pair_key
fi

# Copy this setup script to root's $HOME.
cat <<... | ssh root@$ip_address "cat > $setup_file_name"
set -ex

# Remove this script:
rm $setup_file_name

# Add users. sudo for $admin_user:
addgroup admin
adduser $admin_user
adduser $admin_user admin

# Move the public key over to $admin_user's home:
mkdir -p /home/$admin_user/.ssh
chmod 700 /home/$admin_user/.ssh
cp ~/.ssh/authorized_keys /home/$admin_user/.ssh/
chown -R $admin_user:$admin_user /home/$admin_user/.ssh

# TODO make sudo passwordless.

if [ -f pair_key ]; then
  adduser --disabled-password $pair_user
  mkdir -p /home/$pair_user/.ssh
  chmod 700 /home/$pair_user/.ssh
  mv pair_key /home/$pair_user/.ssh/authorized_keys
  chown -R $pair_user:$pair_user /home/$pair_user/.ssh
else
  adduser $pair_user
fi

# Install requested software:
apt-get update --yes
apt-get install git --yes
git clone git@github.com:ingydotnet/pairup-bash pairup
bash ./pairup/conf/install
if [ -f ./pairup/user/$admin_user/install ]; then
  bash ./pairup/user/$admin_user/install
fi
if [ -f ./pairup/user/$pair_user/install ]; then
  bash ./pairup/user/$pair_user/install
fi

rm -fr pairup

# TODO scramble root password
...

# Run the interactive root script:
ssh -t root@$ip_address bash $setup_file_name

#------------------------------------------------------------------------------
# Now do the 'admin_user' stuff:
#------------------------------------------------------------------------------

# Copy over files
dots=conf...
scp $dots github-repos $admin_user@$ip_address:
if [ -f user/$admin_user/$dots ]; then
  cat user/$admin_user/$dots | ssh $admin_user@$ip_address "cat >> $dots"
fi
if [ -f user/$pair_user/$dots ]; then
  cat user/$pair_user/$dots | ssh $admin_user@$ip_address "cat >> $dots"
fi
if [ -f user/private/$dots ]; then
  cat user/private/$dots | ssh $admin_user@$ip_address "cat >> $dots"
fi

# Copy this setup script to $admin_user's $HOME.
cat <<... | ssh $admin_user@$ip_address "cat > $setup_file_name"
set -ex

# Remove this script:
rm $setup_file_name

# Get this repo remotely
git clone git@github.com:ingydotnet/pairup-bash pairup
cp -p ~/pairup/bin/* ~/bin/

# Get other repos of interest
while read repo; do
  [ -z "\$repo" ] && continue
  git clone git@github.com:\$repo src/\${repo#*/}
done < github-repos
rm github-repos

# Install ... dotfile management setup:
git clone git://github.com/ingydotnet/....git
mv $dots .../conf
.../... update
.../... install

# Make a little remote script called 'PairUp'. Run this first thing to get
# your bearings inside the VPS:
cat <<.... > ~/bin/PairUp
chmod 777 /tmp/pairup
cat <<.....
Welcome to your new pairup VPS tmux session!

Tell your pair programmer to run these commands:

    ssh $pair_user@$ip_address
    pairup

You may want to run this command now:

    pairup-server-setup-more &> /tmp/pairup-server-setup-more.log &

.....
....
chmod +x ~/bin/PairUp

# Start tmux with a shared socket:
tmux -S /tmp/pairup
...

# Run the interactive admin_user script:
ssh -t $admin_user@$ip_address bash $setup_file_name

# Now you should be inside a perfectly working tmux session for pairing.
# Run the `PairUp` command and it will tell you what your partner needs.
